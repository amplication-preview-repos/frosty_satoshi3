/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  RecognitionModel as PrismaRecognitionModel,
  Workspace as PrismaWorkspace,
} from "@prisma/client";

export class RecognitionModelServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.RecognitionModelCountArgs, "select">
  ): Promise<number> {
    return this.prisma.recognitionModel.count(args);
  }

  async recognitionModels(
    args: Prisma.RecognitionModelFindManyArgs
  ): Promise<PrismaRecognitionModel[]> {
    return this.prisma.recognitionModel.findMany(args);
  }
  async recognitionModel(
    args: Prisma.RecognitionModelFindUniqueArgs
  ): Promise<PrismaRecognitionModel | null> {
    return this.prisma.recognitionModel.findUnique(args);
  }
  async createRecognitionModel(
    args: Prisma.RecognitionModelCreateArgs
  ): Promise<PrismaRecognitionModel> {
    return this.prisma.recognitionModel.create(args);
  }
  async updateRecognitionModel(
    args: Prisma.RecognitionModelUpdateArgs
  ): Promise<PrismaRecognitionModel> {
    return this.prisma.recognitionModel.update(args);
  }
  async deleteRecognitionModel(
    args: Prisma.RecognitionModelDeleteArgs
  ): Promise<PrismaRecognitionModel> {
    return this.prisma.recognitionModel.delete(args);
  }

  async getWorkspace(parentId: string): Promise<PrismaWorkspace | null> {
    return this.prisma.recognitionModel
      .findUnique({
        where: { id: parentId },
      })
      .workspace();
  }
}
