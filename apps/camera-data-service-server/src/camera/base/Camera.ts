/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsDate,
  MaxLength,
  IsOptional,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { JsonValue } from "type-fest";
import { Workspace } from "../../workspace/base/Workspace";
import { Rule } from "../../rule/base/Rule";
import { Zone } from "../../zone/base/Zone";
import { Statistic } from "../../statistic/base/Statistic";

@ObjectType()
class Camera {
  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  ipAddress!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  location!: string | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  settings!: JsonValue;

  @ApiProperty({
    required: false,
    type: () => Workspace,
  })
  @ValidateNested()
  @Type(() => Workspace)
  @IsOptional()
  workspace?: Workspace | null;

  @ApiProperty({
    required: false,
    type: () => [Rule],
  })
  @ValidateNested()
  @Type(() => Rule)
  @IsOptional()
  rules?: Array<Rule>;

  @ApiProperty({
    required: false,
    type: () => [Zone],
  })
  @ValidateNested()
  @Type(() => Zone)
  @IsOptional()
  zones?: Array<Zone>;

  @ApiProperty({
    required: false,
    type: () => [Statistic],
  })
  @ValidateNested()
  @Type(() => Statistic)
  @IsOptional()
  statistics?: Array<Statistic>;
}

export { Camera as Camera };
