/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { JsonFilter } from "../../util/JsonFilter";
import { WorkspaceWhereUniqueInput } from "../../workspace/base/WorkspaceWhereUniqueInput";
import { RuleListRelationFilter } from "../../rule/base/RuleListRelationFilter";
import { ZoneListRelationFilter } from "../../zone/base/ZoneListRelationFilter";
import { StatisticListRelationFilter } from "../../statistic/base/StatisticListRelationFilter";

@InputType()
class CameraWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  ipAddress?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  location?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: JsonFilter,
  })
  @Type(() => JsonFilter)
  @IsOptional()
  @Field(() => JsonFilter, {
    nullable: true,
  })
  settings?: JsonFilter;

  @ApiProperty({
    required: false,
    type: () => WorkspaceWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => WorkspaceWhereUniqueInput)
  @IsOptional()
  @Field(() => WorkspaceWhereUniqueInput, {
    nullable: true,
  })
  workspace?: WorkspaceWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => RuleListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RuleListRelationFilter)
  @IsOptional()
  @Field(() => RuleListRelationFilter, {
    nullable: true,
  })
  rules?: RuleListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ZoneListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ZoneListRelationFilter)
  @IsOptional()
  @Field(() => ZoneListRelationFilter, {
    nullable: true,
  })
  zones?: ZoneListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => StatisticListRelationFilter,
  })
  @ValidateNested()
  @Type(() => StatisticListRelationFilter)
  @IsOptional()
  @Field(() => StatisticListRelationFilter, {
    nullable: true,
  })
  statistics?: StatisticListRelationFilter;
}

export { CameraWhereInput as CameraWhereInput };
