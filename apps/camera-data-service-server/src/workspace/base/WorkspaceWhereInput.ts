/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { RecognitionModelListRelationFilter } from "../../recognitionModel/base/RecognitionModelListRelationFilter";
import { CameraListRelationFilter } from "../../camera/base/CameraListRelationFilter";
import { UserListRelationFilter } from "../../user/base/UserListRelationFilter";
import { RuleListRelationFilter } from "../../rule/base/RuleListRelationFilter";
import { ZoneListRelationFilter } from "../../zone/base/ZoneListRelationFilter";
import { NotificationListRelationFilter } from "../../notification/base/NotificationListRelationFilter";
import { StatisticListRelationFilter } from "../../statistic/base/StatisticListRelationFilter";
import { ApiSettingListRelationFilter } from "../../apiSetting/base/ApiSettingListRelationFilter";
import { SupportRequestListRelationFilter } from "../../supportRequest/base/SupportRequestListRelationFilter";

@InputType()
class WorkspaceWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  description?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => RecognitionModelListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RecognitionModelListRelationFilter)
  @IsOptional()
  @Field(() => RecognitionModelListRelationFilter, {
    nullable: true,
  })
  recognitionModels?: RecognitionModelListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CameraListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CameraListRelationFilter)
  @IsOptional()
  @Field(() => CameraListRelationFilter, {
    nullable: true,
  })
  cameras?: CameraListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => UserListRelationFilter,
  })
  @ValidateNested()
  @Type(() => UserListRelationFilter)
  @IsOptional()
  @Field(() => UserListRelationFilter, {
    nullable: true,
  })
  users?: UserListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => RuleListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RuleListRelationFilter)
  @IsOptional()
  @Field(() => RuleListRelationFilter, {
    nullable: true,
  })
  rules?: RuleListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ZoneListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ZoneListRelationFilter)
  @IsOptional()
  @Field(() => ZoneListRelationFilter, {
    nullable: true,
  })
  zones?: ZoneListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => NotificationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => NotificationListRelationFilter)
  @IsOptional()
  @Field(() => NotificationListRelationFilter, {
    nullable: true,
  })
  notifications?: NotificationListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => StatisticListRelationFilter,
  })
  @ValidateNested()
  @Type(() => StatisticListRelationFilter)
  @IsOptional()
  @Field(() => StatisticListRelationFilter, {
    nullable: true,
  })
  statistics?: StatisticListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ApiSettingListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ApiSettingListRelationFilter)
  @IsOptional()
  @Field(() => ApiSettingListRelationFilter, {
    nullable: true,
  })
  apiSettings?: ApiSettingListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => SupportRequestListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SupportRequestListRelationFilter)
  @IsOptional()
  @Field(() => SupportRequestListRelationFilter, {
    nullable: true,
  })
  supportRequests?: SupportRequestListRelationFilter;
}

export { WorkspaceWhereInput as WorkspaceWhereInput };
